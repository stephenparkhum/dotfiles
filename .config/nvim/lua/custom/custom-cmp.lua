-- vim.opt.completeopt = { "menu", "menuone", "noselect" }
-- vim.opt.shortmess:append "c"
-- 
-- local lspkind = require('lspkind')
-- lspkind.init {}
-- 
-- local cmp = require 'cmp'
-- 
-- -- This next line brings in auto-pairs to the completion workflow
-- -- local cmp_autopairs = require('nvim-autopairs.completion.cmp')
-- 
-- cmp.setup({
--   -- Enable Luasnip in completions
--   snippet = {
--     expand = function(args)
--       require('luasnip').lsp_expand(args.body) -- For `luasnip` users.
--     end,
--   },
--   sources = cmp.config.sources({
--     { name = 'nvim_lsp' },
--     { name = "path" },
--     { name = 'buffer' },
--   }),
--   mapping = {
--     ['<C-n>'] = cmp.mapping.select_next_item { behavior = cmp.SelectBehavior.Insert },
--     ['<C-p>'] = cmp.mapping.select_prev_item { behavior = cmp.SelectBehavior.Insert },
--     ['<C-b>'] = cmp.mapping(cmp.mapping.scroll_docs(-4), { 'i', 'c' }),
--     ['<C-f>'] = cmp.mapping(cmp.mapping.scroll_docs(4), { 'i', 'c' }),
--     ['<C-Space>'] = cmp.mapping(cmp.mapping.complete(), { 'i', 'c' }),
--     ['<C-y>'] = cmp.mapping(
--       cmp.mapping.confirm {
--         behavior = cmp.ConfirmBehavior.Insert,
--         select = true,
--       },
--       { "i", "c" }
--     ),
--     ['<CR>'] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items.
--     ['<Tab>'] = function(fallback)
--       if cmp.visible() then
--         cmp.select_next_item()
--       else
--         fallback()
--       end
--     end,
--     ['<S-Tab>'] = function(fallback)
--       if cmp.visible() then
--         cmp.select_prev_item()
--       else
--         fallback()
--       end
--     end
--   },
--   formatting = {
--     format = lspkind.cmp_format({
--       mode = 'symbol_text',     -- options: 'text', 'text_symbol', 'symbol_text', 'symbol'
--       maxwidth = 50,            -- prevent the popup from showing more than provided characters (e.g 50 will not show more than 50 characters)
--       ellipsis_char = '...',    -- when popup menu exceed maxwidth, the truncated part would show ellipsis_char instead (must define maxwidth first)
--       show_labelDetails = true, -- show labelDetails in menu. Disabled by default
--       -- The function below will be called before any actual modifications from lspkind
--       -- so that you can provide more controls on popup customization. (See [#30](https://github.com/onsails/lspkind-nvim/pull/30))
--       before = function(entry, vim_item)
--         return vim_item
--       end
--     })
--   },
-- })
